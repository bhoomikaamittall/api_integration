@RestResource(urlMapping='/accountOperations/*')
global with sharing class AccountOperationsRestController {

    @HttpPost
    global static String createAccount(String name, String phoneNumber, String email, String residentialAddress) {
        try {
            Account newAccount = new Account(
                Name = name,
                Phone = phoneNumber,
                Email__c = email,
                Residential_Address__c = residentialAddress
            );
            insert newAccount;
            return 'Account created successfully. Account Id: ' + newAccount.Id;
        } catch (Exception e) {
            return 'Error creating account: ' + e.getMessage();
        }
    }

   @HttpGet
global static String getAccountDetails() {
    RestRequest req = RestContext.request;
            String accountId = req.requestURI.substring(req.requestURI.lastIndexOf('/') + 1);
    
    try {
        Account account = [SELECT Name, Phone, Email__c, Residential_Address__c FROM Account WHERE Id = :accountId];
        return 'Account Details: ' + account;
    } catch (Exception e) {
        return 'Error retrieving account details: ' + e.getMessage();
    }
}

    @HttpPatch
    global static String updateAccount( String name, String phoneNumber, String email, String residentialAddress) {
        RestRequest req = RestContext.request;
            String accountId = req.requestURI.substring(req.requestURI.lastIndexOf('/') + 1);
        try {
            
            Account accountToUpdate = [SELECT Id FROM Account WHERE Id = :accountId LIMIT 1];
            accountToUpdate.Name = name;
            accountToUpdate.Phone = phoneNumber;
            accountToUpdate.Email__c = email;
            accountToUpdate.Residential_Address__c = residentialAddress;
            update accountToUpdate;
            return 'Account updated successfully.';
        } catch (Exception e) {
            return 'Error updating account: ' + e.getMessage();
        }
    }

 @HttpDelete
global static String deleteAccount() {
    String accountId = RestContext.request.requestURI.substringAfterLast('/'); // Extract accountId from the URL
    
    try {
        Account accountToDelete = [SELECT Id FROM Account WHERE Id = :accountId LIMIT 1];
        delete accountToDelete;
        return 'Account deleted successfully.';
    } catch (Exception e) {
        return 'Error deleting account: ' + e.getMessage();
    }
}
}